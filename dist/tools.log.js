// Generated by CoffeeScript 2.3.2
var bold, color, ital, ref, ref1, ref2, ref3, tickLog, toStr;

bold = function(msg) {
  return `<b>${msg}</b>`;
};

ital = function(msg) {
  return `<i>${msg}</i>`;
};

color = function(color) {
  return function(msg) {
    return `<font color='${color}'>${msg}</font>`;
  };
};

tickLog = function() {
  return console.log(((color("#444"))(`[${Game.time}]`)) + toStr(arguments));
};

toStr = function(args) {
  //  console.log args
  if (args.length === 1) {
    return args[0];
  } else {
    return Array.prototype.slice.call(args).join(",");
  }
};

module.exports.important = function() {
  return tickLog((color("blue"))(bold(toStr(arguments))));
};

if ((ref = Memory.switches) != null ? (ref1 = ref.log) != null ? ref1.showInfo : void 0 : void 0) {
  module.exports.info = function() {
    return tickLog((color("grey"))(ital(toStr(arguments))));
  };
}

module.exports.warn = function() {
  return tickLog((color("yellow"))(toStr(arguments)));
};

module.exports.error = function() {
  return tickLog((color("red"))(bold(toStr(arguments))));
};

module.exports.debug = function() {
  return tickLog((color("green"))(toStr(arguments)));
};

module.exports.trace = function() {
  return tickLog((color("green"))(toStr(arguments)));
};

if ((ref2 = Memory.switches) != null ? (ref3 = ref2.log) != null ? ref3.showLore : void 0 : void 0) {
  module.exports.lore = function() {
    return tickLog((color("teal"))(toStr(arguments)));
  };
}

module.exports.assert = function(condition, ...args) {
  if (condition !== true) {
    module.exports.error(toStr(args));
    throw new Error(`AssertionError: ${toStr(args)}`);
  }
};
